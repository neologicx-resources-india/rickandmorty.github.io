{"version":3,"sources":["components/Header.js","components/Video.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Form","inline","FormControl","type","placeholder","Button","variant","Video","props","class","width","height","controls","src","link","App","Fragment","components_Header","map","index","components_Video","key","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yQA8BeA,MA3Bf,WACI,OAAQC,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MAC5BL,EAAAC,EAAAC,cAACC,EAAA,EAAOG,MAAR,CAAcC,KAAK,SAAnB,kBACAP,EAAAC,EAAAC,cAACC,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7BT,EAAAC,EAAAC,cAACC,EAAA,EAAOO,SAAR,CAAiBC,GAAG,oBAClBX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAKC,UAAU,WACbb,EAAAC,EAAAC,cAACU,EAAA,EAAIE,KAAL,CAAUP,KAAK,UACfP,EAAAC,EAAAC,cAACU,EAAA,EAAIE,KAAL,CAAUP,KAAK,WASjBP,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,QAAM,GACVhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAaC,KAAK,OAAOC,YAAY,SAASN,UAAU,YACxDb,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQC,QAAQ,mBAAhB,eCVKC,MAVf,SAAeC,GACb,OACEvB,EAAAC,EAAAC,cAAA,OAAKsB,MAAM,UACTxB,EAAAC,EAAAC,cAAA,SAAOuB,MAAM,MAAMC,OAAO,MAAMC,UAAQ,GACtC3B,EAAAC,EAAAC,cAAA,UAAQ0B,IAAKL,EAAMM,KAAMX,KAAK,iBCkDvBY,MAjDf,WAkCE,OACE9B,EAAAC,EAAAC,cAACF,EAAAC,EAAM8B,SAAP,KACE/B,EAAAC,EAAAC,cAAC8B,EAAD,MACAhC,EAAAC,EAAAC,cAAA,OAAKsB,MAAM,aACTxB,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,OAAKsB,MAAM,OAtCH,CACZ,mGACA,mGACA,mGACA,mGACA,mGACA,mGACA,mGACA,mGACA,mGACA,mGACA,mGACA,wFACA,wFACA,wFACA,wFACA,wFACA,wFACA,wFACA,wFACA,wFACA,wFACA,kGACA,kGACA,kGACA,kGACA,kGACA,kGACA,kGACA,kGACA,kGACA,mGAQaS,IAAI,SAACJ,EAAMK,GAAP,OACTlC,EAAAC,EAAAC,cAACiC,EAAD,CAAOC,IAAKF,EAAOL,KAAMA,UCpCjBQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e9f2b630.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Navbar,NavDropdown,Nav,Form,FormControl,Button} from 'react-bootstrap'\r\n\r\nfunction Header(){\r\n    return (<div>\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n      <Navbar.Brand href=\"#home\">RICK AND MORTY</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"#home\"></Nav.Link>\r\n          <Nav.Link href=\"#link\"></Nav.Link>\r\n          {/* <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Item href=\"#action/3.1\"></NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#action/3.2\"></NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#action/3.3\"></NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item href=\"#action/3.4\"></NavDropdown.Item>\r\n          </NavDropdown> */}\r\n        </Nav>\r\n        <Form inline>\r\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n          <Button variant=\"outline-success\">Search</Button>\r\n        </Form>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n    </div>);\r\n    \r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n// import ResponsiveEmbed from \"react-bootstrap/ResponsiveEmbed\";\r\nfunction Video(props) {\r\n  return (\r\n    <div class=\"col-sm\">\r\n      <video width=\"320\" height=\"240\" controls>\r\n        <source src={props.link} type=\"video/mp4\" />\r\n      </video>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Video;\r\n","import React from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport Header from \"./components/Header\";\nimport Video from \"./components/Video\";\n// import Links from \"./components/Links\";\nfunction App() {\n  const links = [\n    'http://dl8.heyserver.in/serial/Rick.and.Morty/S01/720p/Rick.and.Morty.S01E01.720p.BRRip.x264.mkv',\n    'http://dl8.heyserver.in/serial/Rick.and.Morty/S01/720p/Rick.and.Morty.S01E02.720p.BRRip.x264.mkv',\n    'http://dl8.heyserver.in/serial/Rick.and.Morty/S01/720p/Rick.and.Morty.S01E03.720p.BRRip.x264.mkv',\n    'http://dl8.heyserver.in/serial/Rick.and.Morty/S01/720p/Rick.and.Morty.S01E04.720p.BRRip.x264.mkv',\n    'http://dl8.heyserver.in/serial/Rick.and.Morty/S01/720p/Rick.and.Morty.S01E05.720p.BRRip.x264.mkv',\n    'http://dl8.heyserver.in/serial/Rick.and.Morty/S01/720p/Rick.and.Morty.S01E06.720p.BRRip.x264.mkv',\n    'http://dl8.heyserver.in/serial/Rick.and.Morty/S01/720p/Rick.and.Morty.S01E07.720p.BRRip.x264.mkv',\n    'http://dl8.heyserver.in/serial/Rick.and.Morty/S01/720p/Rick.and.Morty.S01E08.720p.BRRip.x264.mkv',\n    'http://dl8.heyserver.in/serial/Rick.and.Morty/S01/720p/Rick.and.Morty.S01E09.720p.BRRip.x264.mkv',\n    'http://dl8.heyserver.in/serial/Rick.and.Morty/S01/720p/Rick.and.Morty.S01E10.720p.BRRip.x264.mkv',\n    'http://dl8.heyserver.in/serial/Rick.and.Morty/S01/720p/Rick.and.Morty.S01E11.720p.BRRip.x264.mkv',\n    \"http://dl8.heyserver.in/serial/Rick.and.Morty/S02/480p/Rick.and.Morty.S02E01.480p.mkv\",\n    \"http://dl8.heyserver.in/serial/Rick.and.Morty/S02/480p/Rick.and.Morty.S02E02.480p.mkv\",\n    \"http://dl8.heyserver.in/serial/Rick.and.Morty/S02/480p/Rick.and.Morty.S02E03.480p.mkv\",\n    \"http://dl8.heyserver.in/serial/Rick.and.Morty/S02/480p/Rick.and.Morty.S02E04.480p.mkv\",\n    \"http://dl8.heyserver.in/serial/Rick.and.Morty/S02/480p/Rick.and.Morty.S02E05.480p.mkv\",\n    \"http://dl8.heyserver.in/serial/Rick.and.Morty/S02/480p/Rick.and.Morty.S02E06.480p.mkv\",\n    \"http://dl8.heyserver.in/serial/Rick.and.Morty/S02/480p/Rick.and.Morty.S02E07.480p.mkv\",\n    \"http://dl8.heyserver.in/serial/Rick.and.Morty/S02/480p/Rick.and.Morty.S02E08.480p.mkv\",\n    \"http://dl8.heyserver.in/serial/Rick.and.Morty/S02/480p/Rick.and.Morty.S02E09.480p.mkv\",\n    \"http://dl8.heyserver.in/serial/Rick.and.Morty/S02/480p/Rick.and.Morty.S02E10.480p.mkv\",\n    \"http://dl8.heyserver.in/serial/Rick.and.Morty/S03/480p/Rick.and.Morty.S03E01.480p.HDTV.x264.mkv\",\n    \"http://dl8.heyserver.in/serial/Rick.and.Morty/S03/480p/Rick.and.Morty.S03E02.480p.HDTV.x264.mkv\",\n    \"http://dl8.heyserver.in/serial/Rick.and.Morty/S03/480p/Rick.and.Morty.S03E03.480p.HDTV.x264.mkv\",\n    \"http://dl8.heyserver.in/serial/Rick.and.Morty/S03/480p/Rick.and.Morty.S03E04.480p.HDTV.x264.mkv\",\n    \"http://dl8.heyserver.in/serial/Rick.and.Morty/S03/480p/Rick.and.Morty.S03E05.480p.HDTV.x264.mkv\",\n    \"http://dl8.heyserver.in/serial/Rick.and.Morty/S03/480p/Rick.and.Morty.S03E06.480p.HDTV.x264.mkv\",\n    \"http://dl8.heyserver.in/serial/Rick.and.Morty/S03/480p/Rick.and.Morty.S03E07.480p.HDTV.x264.mkv\",\n    \"http://dl8.heyserver.in/serial/Rick.and.Morty/S03/480p/Rick.and.Morty.S03E08.480p.HDTV.x264.mkv\",\n    \"http://dl8.heyserver.in/serial/Rick.and.Morty/S03/480p/Rick.and.Morty.S03E09.480p.HDTV.x264.mkv\",\n    \"http://dl8.heyserver.in/serial/Rick.and.Morty/S03/480p/Rick.and.Morty.S03E10.480p.HDTV.x264.mkv\"\n  ];\n  return (\n    <React.Fragment>\n      <Header />\n      <div class=\"container\">\n        <h1>Rick and morty all episodes</h1>\n        <div class=\"row\">\n          {links.map((link, index) => (\n            <Video key={index} link={link} />\n          ))}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}